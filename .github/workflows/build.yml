name: Build/release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
  
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2.2.0

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - name: Setting the Path for Windows
        working-directory: ./Project
        if: matrix.os == 'windows-latest'
        run: |
            yarn install
            yarn devBuild
      - name: Setting the Path for Linux
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./Project
        run: |
            yarn install
            yarn devBuild
      - name: Get directory names
        id: get-directory-names
        uses: actions/collect-directory-names-by-file-glob@v1.1
        with:
          file-glob: '**/*.exe'
          search-directory: '/Project'
          unique: "true"

      - name: Use Directory Names
        run: echo "Directory Names are ${{ steps.get-directory-names.outputs.directory-names}}
        
        
      - name: Publishing For Windows
        if: matrix.os == 'windows-latest'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
            ${{github.workspace}}/Project/dist/*.exe
            ${{github.workspace}}/Project/dist/*.blockmap
            ${{github.workspace}}/Project/dist/*.zip
            ${{github.workspace}}/Project/dist/latest.yml
      - name: Publishing for Linux
        if: matrix.os == 'ubuntu-latest'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
           ${{github.workspace}}/Project/dist/*.zip
           ${{github.workspace}}/Project/dist/*.snap
  deploy:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Get version from ref
      id: get-version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Publish release on GitHub
      uses: test-room-7/action-publish-release-drafts@v0.1.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        tag-name: ${{ steps.get-version.outputs.VERSION }}
